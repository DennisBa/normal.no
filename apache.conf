# To install on a Debian system:
# 1) Symlink this into: /etc/apache2/sites-available/
# 2) Then do a: a2ensite <symlink-name>
# Note: The code must be checked out into /srv/www/normal.no

# These Apache modules are required (and not enabled by default):
# mod_wsgi, mod_expires
# These Apache module are required (but are enabled by default).
# mod_alias, mod_setenvif

# @todo mod_gnutls
# @todo mod_rewrite

# Run syntax check for config files:
# $ apachectl -t


# Normalize URLs: www.normal.no => normal.no
# Note: normal.no/foo => normal.no/foo/ is done by Django (APPEND_SLASH)
<VirtualHost *:80>
    ServerName www.normal.no
    Redirect permanent /    http://normal.no/
</VirtualHost>


<VirtualHost *:80>
    Include /srv/www/normal.no/apache.conf.common

    # Force encryption for /admin
    RewriteEngine On
    RewriteRule ^/admin/(.*)$  https://%{SERVER_NAME}/admin/$1  [L,R=permanent]
    # @todo don't loose query string?
    # RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}

    # Q: Does this work?
    # RedirectMatch ^/admin/(.*) https://%{SERVER_NAME}/$1
</VirtualHost>


<IfModule mod_gnutls.c>
<VirtualHost *:443>
    GnuTLSEnable	    On
    GnuTLSPriorities	    NORMAL
    GnuTLSKeyFile           /srv/www/certs/normal.no.key
    GnuTLSCertificateFile   /srv/www/certs/normal.no.crt

    Include /srv/www/normal.no/apache.conf.common
</VirtualHost>
</IfModule>


<IfModule mod_ssl.c>
<VirtualHost *:443>
    Include /srv/www/normal.no/apache.conf.common

    SSLEngine on
    SSLCertificateFile	    /srv/www/certs/normal.no.crt
    SSLCertificateKeyFile   /srv/www/certs/normal.no.key
</VirtualHost>
</IfModule>
